---
import ToggleTheme from '@components/ui/ToggleTheme.astro';
import { Astronav, MenuItems } from 'astro-navbar';

const menuitems = [
	{
		title: 'Home',
		path: '#home',
	},
	{
		title: 'About',
		path: '#about',
	},
	{
		title: 'Projects',
		path: '#projects',
	},
	{
		title: 'Tech Stack',
		path: '#tech',
	},
	{
		title: 'Contact',
		path: '#contact',
	},
];
const { nav } = Astro.props;
---

<header
	data-testId="header"
	class="z-40 flex w-full flex-col items-center justify-between bg-white py-2 dark:bg-black xs:flex xs:flex-row"
>
	<Astronav>
		<div class="text-orange"></div>
		<MenuItems class="flex w-full justify-center xs:mt-0 xs:w-auto">
			<ul class="mx-2 flex flex-row gap-3">
				{
					menuitems.map((item) => (
						<>
							<li>
								<a
									aria-label="navigation link"
									href={item.path}
									class="flex py-2 text-black focus-within:text-orange hover:text-orange dark:text-white dark:hover:text-orange xs:px-3"
								>
									{item.title}
								</a>
							</li>
						</>
					))
				}
				<li class="grid"><ToggleTheme id={nav} /></li>
			</ul>
		</MenuItems>
	</Astronav>

	<script is:inline>
		document.addEventListener('DOMContentLoaded', () => {
			let preActiveLink = null;
			const links = document.querySelectorAll('a[aria-label="navigation link"]');
			const sections = Array.from(links).map((link) =>
				document.querySelector(link.getAttribute('href'))
			);
			const toggleClass = (found, isTrue) => {
				found.classList.toggle('font-extrabold', isTrue);
			};
			const updateActiveLink = () => {
				let activeLink = null;
				sections.forEach((section, index) => {
					const rect = section.getBoundingClientRect();
					if (rect.top <= window.innerHeight / 2 && rect.bottom >= window.innerHeight / 2) {
						activeLink = links[index].href;
					}
				});

				let found;
				for (let i = 0; i < links.length; i++) {
					if (links[i].href === activeLink) {
						found = links[i];
						break; // Exit the loop once the active link is found
					}
				}
				if (!found || preActiveLink?.href === found?.href) return;

				history.replaceState(null, null, activeLink);
				toggleClass(found, true);
				if (preActiveLink && preActiveLink !== found) {
					toggleClass(preActiveLink, false);
				}
				preActiveLink = found;
			};

			window.addEventListener('scroll', updateActiveLink);
			setTimeout(updateActiveLink, 2000);
		});
	</script>
</header>
